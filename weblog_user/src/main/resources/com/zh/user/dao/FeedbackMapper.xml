<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zh.user.dao.FeedbackMapper">
  <resultMap id="BaseResultMap" type="com.zh.common.entity.Feedback">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="problem" jdbcType="VARCHAR" property="problem" />
    <result column="advice" jdbcType="VARCHAR" property="advice" />
    <result column="is_read" jdbcType="TINYINT" property="isRead" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, problem, advice, is_read, email, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog_feedback
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog_feedback
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zh.common.entity.Feedback">
    insert into blog_feedback (id, user_id, problem, 
      advice, is_read, email, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{problem,jdbcType=VARCHAR}, 
      #{advice,jdbcType=VARCHAR}, #{isRead,jdbcType=TINYINT}, #{email,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zh.common.entity.Feedback">
    insert into blog_feedback
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="problem != null">
        problem,
      </if>
      <if test="advice != null">
        advice,
      </if>
      <if test="isRead != null">
        is_read,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="problem != null">
        #{problem,jdbcType=VARCHAR},
      </if>
      <if test="advice != null">
        #{advice,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null">
        #{isRead,jdbcType=TINYINT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zh.common.entity.Feedback">
    update blog_feedback
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="problem != null">
        problem = #{problem,jdbcType=VARCHAR},
      </if>
      <if test="advice != null">
        advice = #{advice,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null">
        is_read = #{isRead,jdbcType=TINYINT},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zh.common.entity.Feedback">
    update blog_feedback
    set user_id = #{userId,jdbcType=INTEGER},
      problem = #{problem,jdbcType=VARCHAR},
      advice = #{advice,jdbcType=VARCHAR},
      is_read = #{isRead,jdbcType=TINYINT},
      email = #{email,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>